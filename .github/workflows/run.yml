name: Build mihomo ruleset
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "update_version=$(date -d '+8 hours' +%Y-%m-%d)" >> ${GITHUB_ENV}
          echo "domains_download_url=https://github.com/dududuK/domain-list-custom/releases/download/domains" >> ${GITHUB_ENV}
        shell: bash

      - name: Clone Repository
        uses: actions/checkout@v5

      - name: Checkout dududuK/domain-list-custom
        uses: actions/checkout@v5
        with:
          repository: dududuK/domain-list-custom
          path: custom

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: ./custom/go.mod
          cache-dependency-path: ./custom/go.sum

      - name: Download `mihomo` rule-set files
        run: |
          mkdir -p ./mihomo-ruleset/
          domains=(ads trackerslist microsoft-cn apple-cn google-cn games-cn netflix disney max primevideo appletv youtube tiktok bilibili spotify media games ai tld-proxy gfw proxy cn cn-lite)
          archs=(applications networktest)

          for domain in "${domains[@]}"; do
            mkdir -p "./tools/domains/${domain}/"
            curl -sSL "${domains_download_url}/${domain}.list" | awk -F, '{gsub(/^[ \t]+/, "", $1); if ($1=="DOMAIN-SUFFIX") print "+."$2; else if ($1=="DOMAIN") print $2}' >> "./tools/domains/${domain}/${domain}.list"


          done

          mkdir -p ./tmp/ ./tools/domains/fakeip-filter/
          curl -sSL "${domains_download_url}/fakeip-filter.list" | awk '!/^DOMAIN-REGEX,/' | sed -e 's/DOMAIN,//' -e 's/DOMAIN-SUFFIX,/\+\./' > ./tmp/temp-fakeip-filter-domains.txt
          curl -sSL "${domains_download_url}/fakeip-filter.list" | awk '/^DOMAIN-REGEX,/' | sed -e 's/\\s/ /' -e 's/\\./\./g' -e 's/\[\^.\]+/*/g' -e 's/\^\.\*/\^\+/' -e 's/.*\^//; s/\$//' >> ./tmp/temp-fakeip-filter-domains.txt
          sort --ignore-case ./tmp/temp-fakeip-filter-domains.txt >> ./tools/domains/fakeip-filter/fakeip-filter.list

          mkdir -p ./tools/domains/fakeip-filter-lite/
          curl -sSL "${domains_download_url}/fakeip-filter-lite.list" | awk '!/^DOMAIN-REGEX,/' | sed -e 's/DOMAIN,//' -e 's/DOMAIN-SUFFIX,/\+\./' > ./tmp/temp-fakeip-filter-lite-domains.txt
          curl -sSL "${domains_download_url}/fakeip-filter-lite.list" | awk '/^DOMAIN-REGEX,/' | sed -e 's/\\./\./g' -e 's/\[\^.\]+/*/g' -e 's/\^\.\*/\^\+/' -e 's/.*\^//; s/\$//' >> ./tmp/temp-fakeip-filter-lite-domains.txt
          sort --ignore-case ./tmp/temp-fakeip-filter-lite-domains.txt >> ./tools/domains/fakeip-filter-lite/fakeip-filter-lite.list

          mkdir -p ./tools/domains/private/
          curl -sSL "${domains_download_url}/private.list" | awk '!/^DOMAIN-REGEX,/' | sed -e 's/DOMAIN,//' -e 's/DOMAIN-SUFFIX,/\+\./' > ./tmp/temp-private-domains.txt
          curl -sSL "${domains_download_url}/private.list" | awk '/^DOMAIN-REGEX,/' | sed -e 's/\\./\./g' -e 's/\[\^.\]+/*/g' -e 's/\^\.\*/\^\+/' -e 's/.*\^//; s/\$//' >> ./tmp/temp-private-domains.txt
          sort --ignore-case ./tmp/temp-private-domains.txt >> ./tools/domains/private/private.list
          rm -f ./tmp/*

          for arch in "${archs[@]}"; do
            mkdir -p "./tools/rules/${arch}/"
            curl -sSL "${domains_download_url}/${arch}.list" > "./mihomo-ruleset/${arch}.list"
          done

      - name: Generate `mihomo` rule-set (mrs) and move .list files
        run: |
          curl -L https://github.com/DustinWin/proxy-tools/releases/download/mihomo/mihomo-meta-linux-amd64v3.tar.gz | tar -zx -C ./tools/
          mv -f ./tools/CrashCore ./tools/mihomo

          cd ./tools/
          chmod +x ./mihomo
          list=($(ls ./domains/))
          for ((i = 0; i < ${#list[@]}; i++)); do
            ./mihomo convert-ruleset domain text "./domains/${list[i]}/${list[i]}.list" ../mihomo-ruleset/${list[i]}.mrs
            mv -f "./domains/${list[i]}/${list[i]}.list" ../mihomo-ruleset/
          done
          rm -rf ./mihomo* ./domains/

      - name: Release and upload `mihomo-ruleset` assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: mihomo-ruleset
          tag: mihomo-ruleset
          overwrite: true
          body: |
            [mihomo 内核](https://github.com/MetaCubeX/mihomo) rule-set 规则集文件
            规则集文件更新于 ${{ env.update_version }}
          file_glob: true
          file: ./mihomo-ruleset/*

      - name: Commit and push `mihomo-ruleset` branch
        run: |
          cd ./mihomo-ruleset/ || exit 1
          git init
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout -b mihomo-ruleset
          git add . && git commit -m "mihomo 内核 rule-set 规则集文件更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin mihomo-ruleset
